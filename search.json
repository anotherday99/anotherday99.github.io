[{"title":"FreeBSD安装后的简单配置","url":"/2024/09/15/FreeBSD%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE/","content":"本系列所有文章 \nFreeBSD安装后的简单配置给FreeBSD的包管理器pkg配置国内更新源\n\n你可以通过使用右下角\n的小齿轮，来开启黑夜模式和阅读模式。\n\n\n如果提示无法解析域名修改 &#x2F;etc&#x2F;resolv.conf，添加\nnameserver 114.114.114.114nameserver 114.114.114.115\n\n修改pkg包管理器安装源新建路径&#x2F;usr&#x2F;local&#x2F;etc&#x2F;pkg&#x2F;repos&#x2F;ustc.conf文章内容如下：\nustc: &#123;    url: &quot;http://mirrors.ustc.edu.cn/freebsd-pkg/$&#123;ABI&#125;/quarterly&quot;,    mirror_type: &quot;none&quot;,    signature_type: &quot;none&quot;,    fingerprints: &quot;/usr/share/keys/pkg&quot;,    enabled: yes&#125;FreeBSD: &#123; enabled: no &#125;\n执行pkg update -f 即可刷新源修改npm源，如果下载了nodejsnpm config set registry=https://registry.npmmirror.com\n\n修改pip源，如果下载了python和pippip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple\n\n安装桌面pkg install xorg gnome3 noto-sc\n桌面安装完成之后，在 &#x2F;etc&#x2F;fstab 添加以下内容\nproc /proc procfs rw 0 0\n可以使用tab缩进，对齐本来就有的配置就行。在&#x2F;etc&#x2F;rc.conf 添加以下内容\ndbus_enable=&quot;YES&quot;gdm_enable=&quot;YES&quot;gnome_enable=&quot;YES&quot;snd_hda=&quot;YES&quot;\n汉化 gnome ，在 &#x2F;usr&#x2F;local&#x2F;etc&#x2F;gdm&#x2F;locale.conf添加以下内容\nLANG=&quot;zh_CN.UTF-8&quot;LC_CTYPE=&quot;zh_CN.UTF-8&quot;LC_MESSAGES=&quot;zh_CN.UTF-8&quot;LC_ALL=&quot;zh_CN.UTF-8&quot;\n安装输入法引擎和 sudo 。\npkg install zh-ibus-libpinyin pkg install sudo\n安装完成之后，在 &#x2F;usr&#x2F;local&#x2F;etc&#x2F;sudoers 把光标所在行的 %wheel ALL&#x3D;(ALL) ALL 前面的 # 去掉，再把用户名添加到此行的行下面。按照范例格式添加。\n输入 init 6 重启系统，登入桌面在终端里输入 echo “&#x2F;usr&#x2F;local&#x2F;bin&#x2F;gnome-session” &gt; ~&#x2F;.xinitrc 并回车重启系统\n设置输入法，打开设置，在左侧栏目找到并点击键盘，点输入源下的+号，选择汉语（中国），选择中文智能拼音。再点击英文的旁边三个小点，可选下移或者移除。确保中文智能拼音是第一个就行。\n","categories":["FreeBSD"],"tags":["BSD知识分享"]},{"title":"termux安装archlinux教程","url":"/2024/09/14/termux%E5%AE%89%E8%A3%85archlinux%E6%95%99%E7%A8%8B/","content":"本系列所有文章\ntermux安装archlinux教程\n\n你可以通过使用右下角的小齿轮，来开启黑夜模式和阅读模式。\n\n\ntermux安装archlinux已经全部本地化。请注意，ArchLinux的系统较大，在解压后还会占用更多空间，请保证至少有2.0GB空间储备。\n在解压时可能会出现此问题：tar:lgnoring unknown extended header keyword ‘SCHILY.fflags’，这并不会造成任何问题，请无视。\n请复制下面的指令:\npkg install wget openssl-tool proot -y &amp;&amp; hash -r &amp;&amp; wget https://sourceforge.net/projects/anotherday99/files/arch.sh &amp;&amp; bash arch.sh\n\n这将安装Archlinux到您的设备，您稍后可以使用.&#x2F;start-arch.sh指令来启动系统。\n启动后，您必须执行以下指令：chomd 755 additional.sh &amp;&amp; .&#x2F;additional.sh 来设置reslov.conf和pacman-key，否则网络连接和pacman将无法使用！（仅第一次启动需要！！！）\n注意：之后你必须使用.&#x2F;start-arch.sh指令来启动系统。\n本教程使用的所有脚本均托管在sourceforgehttps://sourceforge.net/projects/anotherday99/files/\n","categories":["termux"],"tags":["termux进阶"]},{"title":"在线工具(持续更新)","url":"/2024/09/11/%E5%9C%A8%E7%BA%BF%E5%B7%A5%E5%85%B7/","content":"本系列所有文章在线工具(持续更新)计算机资源超集合(持续更新)你可以通过使用右下角的小齿轮，来开启黑夜模式和阅读模式。                                                    开发必备\n在线ASCII码表\n正则表达式调试工具\n正则表达式可视化\n在线Nginx配置\nBASE64编解码工具\nMD5编码工具\nAES&#x2F;DES加解密\nJWT解码工具\nASCII编解码工具\nUnicode编解码工具\nUTF-8编解码工具\n字符串编解码工具\n通用进制转换工具\n浮点数十进制转换\nRGB颜色转换\n时间戳转换工具\n在线JSON解析\n在线JS代码格式化工具\nCSS可视化工具\nXML格式化工具\nSQL压缩&#x2F;格式化工具\nJSON&#x2F;XML在线转换\nJSON&#x2F;YAML在线转换\nIP地址查询\nHTTP在线接口测试\nUUID在线生成器\n随机数生成器\n在线编译套装\n在线文本比对\n\n创作必备\n在线画图工具\n在线思维导图\n在线字数统计\n在线MD排版\n在线免费图床\n在线代码截图\n在线短链接生成\n在线文本替换\n在线文件压缩工具\n在线多媒体转换器\n在线PDF工具\n在线PS\nlogo在线制作\n在线海报设计工具\nOpen Source Icons\n表情包在线网站\n图片智能放大工具\n在线抠图工具\nICO图标在线生成\n视频转GIF工具\nPixabay图片素材库\nUnsplash图片素材库\nPexels图片素材库\n印象笔记\n有道笔记\nOneNote\n幕 布\n石墨文档\n为知笔记\n语 雀\n\n划水必备\n0x00000001\n内容持续更新中…\n\n在线技术文档\nGit中文教程\nSVN中文手册\njQuery API中文文档\nNginx中文文档\nKafka中文文档\nMybatis中文文档\n微信小程序官方文档\nNodejs中文教程文档\nApache Web Server文档\nSpring文档中文版\nGolang标准库文档中文版\nJava 8官方文档\nMaven官方文档\nTomcat 8官方文档\nSpring Boot官方文档\nRabbitMQ官方文档\nRocketMQ官方文档\nDubbo中文文档\nNetty官方文档\nElasticsearch官方文档\nSpring Cloud官方文档\nDocker官方文档\nKubernetes中文文档\nThymeleaf官方文档\nVue.js中文文档\nReact.js官方文档\nJenkins中文文档\n\n","categories":["资源超集合"],"tags":["在线工具"]},{"title":"搭建lineageOS编译环境","url":"/2025/05/16/%E6%90%AD%E5%BB%BAlineageos%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83/","content":"本系列所有文章\n搭建lineageOS编译环境给编译的lineageOS进行签名\n\n你可以通过使用右下角的小齿轮，来开启黑夜模式和阅读模式。\n\n如果你发现文章内容有错漏、你对文章内容有任何改进意见或者你阅读文章遇到了困难，都可以通过博客首页的邮箱联系我。\n\n\n\n操作系统Debian12*需要root权限\n【核心硬件建议：\n\nCPU核心数：至少 8 核以上。性能优先级：多核性能 &gt; 单核性能（编译过程高度并行化）。\n内存（RAM）最低要求：16GB（勉强可用，但可能因设备代码量不同而频繁卡顿），需要扩展swap，不然进程会被kill。推荐配置：32GB 或更高（避免因内存不足导致编译中断）。\n存储（硬盘）容量：至少 500GB 可用空间（源码 + 编译产物可能占用 300GB 以上，内存不够得开swap、后续加速编译要开ccache，也得个大几十GB）。类型：NVMe SSD（编译过程涉及大量文件读写，SSD 速度直接影响效率）。\n操作系统官方支持：Debian Stable（如 本文档使用的就是Debian12）或 Ubuntu LTS（如 22.04&#x2F;24.04）。其他系统：可尝试 Arch Linux 或 Fedora，但需自行解决依赖兼容性问题。尽量避免使用 Windows，WSL 2虽然可行，但性能和兼容性较差。】\n\n\n云编译建议使用tmux，避免由于网络差丢失ssh连接，从而被杀进程。基础使用:\n\n创建会话 tmux new -s ‘这里输入你想创建的会话名称’ 示例： tmux new -s lineage_build \n若需要离开tmux窗口，先按 Ctrl+b再按d，即可退出会话\n列出tmux后台会话进程，tmux ls\n重新连接后进入tmux会话或者查看编译进度，tmux attach -t  ‘这里输入你创建的会话名称’ 示例：tmux attach -t lineage_build\n\n\n配置编译环境，安装软件包、编译依赖、编译工具以及同步lineageOS源代码sudo apt update &amp;&amp; sudo apt upgrade -ysudo apt install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf imagemagick lib32ncurses-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.2-dev libxml2 libxml2-utils lzop maven pngcrush python3 python-is-python3 rsync schedtool squashfs-tools tmux unzip wget zip zlib1g-dev openjdk-17-jdk android-sdk-platform-tools-common protobuf-compiler python3-protobuf lib32readline-dev libdw-dev libelf-dev lz4  xsltproc libncurses5 libtinfo5\nmkdir -p ~/binmkdir -p ~/android/lineage\nmkdir ~/.ccacheecho &#x27;export USE_CCACHE=1&#x27; &gt;&gt; ~/.bashrcecho &#x27;export CCACHE_DIR=~/.ccache&#x27; &gt;&gt; ~/.bashrcsource ~/.bashrcccache -M 50G  # 设置缓存大小为 50GB，可以按需求自行调整，但是就算只编译一种设备的映像文件也建议25G起步。ccache -o compression=true\ncurl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repochmod a+x ~/bin/repoecho &#x27;export PATH=&quot;$HOME/bin:$PATH&quot;&#x27; &gt;&gt; ~/.bashrcsource ~/.bashrc\ngit config --global user.email &quot;you@example.com&quot;git config --global user.name &quot;Your Name&quot;\ngit lfs install\ngit config --global trailer.changeid.key &quot;Change-Id&quot;\ncd ~/android/lineagerepo init -u https://github.com/LineageOS/android.git -b lineage-21.0 --git-lfs 【可选参数--no-clone-bundle】  #自行修改要拉取的lineage版本\nrepo sync\n\n编译lineageOS通用镜像【可以自行选择编译的lineageos的对应脚本】注意，安卓15的td编译脚本，推荐使用MisterZtr的lineageOS编译脚本。github上可以找到仓库。\ngit clone https://github.com/AndyCGYan/lineage_build_unified lineage_build_unified -b lineage-21-lightgit clone https://github.com/AndyCGYan/lineage_patches_unified lineage_patches_unified -b lineage-21-light\n\ntd即TD-based，应用TrebleDroid的全量补丁集，对旧设备、mtk处理器、三星等手机有更好的兼容性。\nlight脚本应用的补丁则少得多，几乎只对一般的现代设备有用，编译出来的系统映像文件兼容性比td的要差些。\n请按自己的实际情况来选择，一般而言，除了老旧的设备和奇怪的冷门设备，一般可以使用light脚本构建的系统映像文件。\n\nbash lineage_build_unified/buildbot_unified.sh treble 64VN 64VS 64GN #按需要选择参数编译\n\n编译指定设备的lineageos，需要到github下载设备树、驱动、内核以oneplus 8t为例：手动下载设备树、内核、专有文件（或通过local_manifest.xml自动拉取）设备树路径：device&#x2F;oneplus&#x2F;kebab内核路径：kernel&#x2F;oneplus&#x2F;sm8250专有文件路径：vendor&#x2F;oneplus&#x2F;kebab 和 vendor&#x2F;oneplus&#x2F;sm8250-common硬件支持路径：hardware&#x2F;oplus\n一加8T 设备树 https://github.com/LineageOS/android_device_oneplus_kebab 文件放置路径 device&#x2F;oneplus&#x2F;kebabSM8250 一加通用设备树：https://github.com/LineageOS/android_device_oneplus_sm8250 文件放置路径device&#x2F;oneplus&#x2F;sm8250-commonSM8250 一加内核：https://github.com/LineageOS/android_kernel_oneplus_sm8250  文件放置路径 kernel&#x2F;oneplus&#x2F;sm8250SM8250 一加通用专有文件：https://github.com/TheMuppets/proprietary_vendor_oneplus_sm8250-common 文件放置路径 vendor&#x2F;oneplus&#x2F;kebab&#x2F;sm8250-common一加8T专有文件：https://github.com/TheMuppets/proprietary_vendor_oneplus_kebab 文件放置路径 vendor&#x2F;oneplus&#x2F;kebab一加硬件支持：https://github.com/LineageOS/android_hardware_oplus 文件放置路径 hardware&#x2F;oplus\n推荐通过 local_manifest.xml 自动拉取\n\n在源码根目录创建 .repo&#x2F;local_manifests&#x2F;roomservice.xml\n添加设备树、内核、专有文件的仓库定义以下是local_manifest.xml参考内容:\n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;manifest&gt;  &lt;!-- 一加8T 设备树 --&gt;  &lt;project name=&quot;LineageOS/android_device_oneplus_kebab&quot; path=&quot;device/oneplus/kebab&quot; remote=&quot;github&quot; /&gt;  &lt;!-- SM8250 通用设备树 --&gt;  &lt;project name=&quot;LineageOS/android_device_oneplus_sm8250-common&quot; path=&quot;device/oneplus/sm8250-common&quot; remote=&quot;github&quot; /&gt;  &lt;!-- SM8250 内核 --&gt;  &lt;project name=&quot;LineageOS/android_kernel_oneplus_sm8250&quot; path=&quot;kernel/oneplus/sm8250&quot; remote=&quot;github&quot; /&gt;  &lt;!-- 一加8T 专有文件 --&gt;  &lt;project name=&quot;TheMuppets/proprietary_vendor_oneplus_kebab&quot; path=&quot;vendor/oneplus/kebab&quot; remote=&quot;github&quot; /&gt;  &lt;!-- SM8250 通用专有文件 --&gt;  &lt;project name=&quot;TheMuppets/proprietary_vendor_oneplus_sm8250-common&quot; path=&quot;vendor/oneplus/sm8250-common&quot; remote=&quot;github&quot; /&gt;  &lt;!-- 一加硬件支持 --&gt;  &lt;project name=&quot;LineageOS/android_hardware_oplus&quot; path=&quot;hardware/oplus&quot; remote=&quot;github&quot; /&gt;&lt;/manifest&gt;\n\n编译lineageOS映像文件1】对于编译通用镜像GSI，命令行进入lineageOS源码根目录，使用脚本指令\nbash lineage_build_unified/buildbot_unified.sh treble 64VN\n即可输出文件在用户主目录下，build-output里面\n2】对于编译指定设备的lineageOS,命令行进入lineageOS源码根目录，依次输入下列指令\nsource build/envsetup.shbreakfast kebabcrootbrunch kebab\n进入输出文件夹（假设构建完成并且没有错误）\ncd $OUT\n","categories":["lineageOS编译"],"tags":["lineageOS"]},{"title":"给FreeBSD的包管理器pkg配置国内更新源","url":"/2024/09/13/%E7%BB%99FreeBSD%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8pkg%E9%85%8D%E7%BD%AE%E5%9B%BD%E5%86%85%E6%9B%B4%E6%96%B0%E6%BA%90/","content":"本系列所有文章\nFreeBSD安装后的简单配置给FreeBSD的包管理器pkg配置国内更新源\n\n你可以通过使用右下角的小齿轮，来开启黑夜模式和阅读模式。\n\n\n适用于FreeBSD13.0版本及以上FreeBSD包管理器pkg的官方源配置是&#x2F;etc&#x2F;pkg&#x2F;FreeBSD.conf，请先检查该文件内容。注意其中的url参数配置了官方仓库的地址，我们需要把它替换为镜像站的地址。\n请注意，由于该配置文件是FreeBSD基本系统的一部分，会随着freebsd-update更新，请不要直接修改，我们需要创建&#x2F;usr&#x2F;local&#x2F;etc&#x2F;pkg&#x2F;repos&#x2F;ustc.conf覆盖配置，文件内容如下：\nustc: &#123;  url: &quot;http://mirrors.ustc.edu.cn/freebsd-pkg/$&#123;ABI&#125;/quarterly&quot;,  mirror_type: &quot;none&quot;,  signature_type: &quot;none&quot;,  fingerprints: &quot;/usr/share/keys/pkg&quot;,  enabled: yes&#125;FreeBSD: &#123; enabled: no &#125;\n\n如果要使用滚动更新的latest仓库，把url配置最后的quarterly换成latest即可。\n修改配置后，运行pkg update -f更新索引。\n","categories":["FreeBSD"],"tags":["BSD知识分享"]},{"title":"给编译的lineageOS进行签名","url":"/2025/06/03/%E7%BB%99%E7%BC%96%E8%AF%91%E7%9A%84lineageOS%E7%AD%BE%E5%90%8D/","content":"本系列所有文章\n搭建lineageOS编译环境给编译的lineageOS进行签名\n\n你可以通过使用右下角的小齿轮，来开启黑夜模式和阅读模式。\n\n如果你发现文章内容有错漏、你对文章内容有任何改进意见或者你阅读文章遇到了困难，都可以通过博客首页的邮箱联系我。\n\n\n\n在使用文档前，我希望你有点基础，能够判断出哪些是完整的执行命令。部分指令有注解，请耐心将一整段的指令内容看完后再执行。强烈建议你完整过一遍文档再进行签名操作！！！\n对编译的文件进行签名使用终端进入到下载Android源代码的根目录，运行以下命令，请按需自行修改subject\nsubject=&#x27;/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=Android/emailAddress=android@android.com&#x27;\nmkdir ~/.android-certsfor cert in bluetooth cyngn-app media networkstack nfc platform releasekey sdk_sandbox shared testcert testkey verity; do \\    ./development/tools/make_key ~/.android-certs/$cert &quot;$subject&quot;; \\done\n示例：生成并将test-keys替换成你生成的正式密钥自定义主题（替换组织信息）\nsubject=&#x27;/C=CN/ST=Beijing/L=Beijing/O=MyCompany/OU=Android/CN=Android/emailAddress=dev@mycompany.com&#x27;\n生成密钥\nmkdir ~/.android-certsfor cert in bluetooth cyngn-app media networkstack nfc platform releasekey sdk_sandbox shared testcert testkey verity; do \\    ./development/tools/make_key ~/.android-certs/$cert &quot;$subject&quot;; \\done\n编译时使用自定义密钥export DEFAULT_SYSTEM_DEV_CERTIFICATE=~/.android-certs/releasekeysource build/envsetup.shlunch lineage_kebab-userdebugbrunch kebab​\n注解：这是在定义一个 ​​X.509 证书的主题（Subject）​​，用于所有生成的密钥。C&#x3D;US：国家代码（美国）。ST&#x3D;California：州&#x2F;省（加利福尼亚）。L&#x3D;Mountain View：地区（山景城）。O&#x3D;Android：组织名称（Android）。OU&#x3D;Android：组织单位（Android）。CN&#x3D;Android：通用名称（证书持有者名称）。emailAddress&#x3D;android@android.com：联系邮箱。\nLineageOS 19.1 及更高版本要求对 APEX 进行重新签名。 每个 APEX 文件都使用两个密钥进行签名：一个用于 APEX 中的微型文件系统映像，另一个用于整个 APEX。\ncp ./development/tools/make_key ~/.android-certs/sed -i &#x27;s|2048|4096|g&#x27; ~/.android-certs/make_key\n然后生成 APEX 密钥，更改下面的行以反映您的信息。【注意下列命令中也有subject，请按需自行修改】生成没有密码的密钥，您需要为生成的每个 APEX 密钥输入两次空白密码\nfor apex in com.android.adbd com.android.adservices com.android.adservices.api com.android.appsearch com.android.appsearch.apk com.android.art com.android.bluetooth com.android.btservices com.android.cellbroadcast com.android.compos com.android.configinfrastructure com.android.connectivity.resources com.android.conscrypt com.android.devicelock com.android.extservices com.android.graphics.pdf com.android.hardware.authsecret com.android.hardware.biometrics.face.virtual com.android.hardware.biometrics.fingerprint.virtual com.android.hardware.boot com.android.hardware.cas com.android.hardware.neuralnetworks com.android.hardware.rebootescrow com.android.hardware.wifi com.android.healthfitness com.android.hotspot2.osulogin com.android.i18n com.android.ipsec com.android.media com.android.media.swcodec com.android.mediaprovider com.android.nearby.halfsheet com.android.networkstack.tethering com.android.neuralnetworks com.android.nfcservices com.android.ondevicepersonalization com.android.os.statsd com.android.permission com.android.profiling com.android.resolv com.android.rkpd com.android.runtime com.android.safetycenter.resources com.android.scheduling com.android.sdkext com.android.support.apexer com.android.telephony com.android.telephonymodules com.android.tethering com.android.tzdata com.android.uwb com.android.uwb.resources com.android.virt com.android.vndk.current com.android.vndk.current.on_vendor com.android.wifi com.android.wifi.dialog com.android.wifi.resources com.google.pixel.camera.hal com.google.pixel.vibrator.hal com.qorvo.uwb; do \\    subject=&#x27;/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=&#x27;$apex&#x27;/emailAddress=android@android.com&#x27;; \\    ~/.android-certs/make_key ~/.android-certs/$apex &quot;$subject&quot;; \\    openssl pkcs8 -in ~/.android-certs/$apex.pk8 -inform DER -nocrypt -out ~/.android-certs/$apex.pem; \\done\n生成使用密码的密钥，您需要为生成的每个 APEX 密钥输入两次密码。\nfor apex in com.android.adbd com.android.adservices com.android.adservices.api com.android.appsearch com.android.appsearch.apk com.android.art com.android.bluetooth com.android.btservices com.android.cellbroadcast com.android.compos com.android.configinfrastructure com.android.connectivity.resources com.android.conscrypt com.android.devicelock com.android.extservices com.android.graphics.pdf com.android.hardware.authsecret com.android.hardware.biometrics.face.virtual com.android.hardware.biometrics.fingerprint.virtual com.android.hardware.boot com.android.hardware.cas com.android.hardware.neuralnetworks com.android.hardware.rebootescrow com.android.hardware.wifi com.android.healthfitness com.android.hotspot2.osulogin com.android.i18n com.android.ipsec com.android.media com.android.media.swcodec com.android.mediaprovider com.android.nearby.halfsheet com.android.networkstack.tethering com.android.neuralnetworks com.android.nfcservices com.android.ondevicepersonalization com.android.os.statsd com.android.permission com.android.profiling com.android.resolv com.android.rkpd com.android.runtime com.android.safetycenter.resources com.android.scheduling com.android.sdkext com.android.support.apexer com.android.telephony com.android.telephonymodules com.android.tethering com.android.tzdata com.android.uwb com.android.uwb.resources com.android.virt com.android.vndk.current com.android.vndk.current.on_vendor com.android.wifi com.android.wifi.dialog com.android.wifi.resources com.google.pixel.camera.hal com.google.pixel.vibrator.hal com.qorvo.uwb; do \\    subject=&#x27;/C=US/ST=California/L=Mountain View/O=Android/OU=Android/CN=&#x27;$apex&#x27;/emailAddress=android@android.com&#x27;; \\    ~/.android-certs/make_key ~/.android-certs/$apex &quot;$subject&quot;; \\    openssl pkcs8 -in ~/.android-certs/$apex.pk8 -inform DER -out ~/.android-certs/$apex.pem; \\done\n生成安装包生成目标文件并对其进行签名，按照设备的构建说明操作后，不要运行构建命令 ，而是改成以下命令：\nbreakfast &lt;codename&gt;mka target-files-package otatools\n请坐下来等待一段时间。这可能需要一段时间，具体取决于您计算机的规格。当它完成了，你只需要签署所有 APK 和 APEX。\nLineageOS 版本 18.1 及更低版本的签名过程：crootsign_target_files_apks -o -d ~/.android-certs \\    $OUT/obj/PACKAGING/target_files_intermediates/*-target_files-*.zip \\    signed-target_files.zip\nLineageOS 版本 19.1 及更高版本的签名过程：crootsign_target_files_apks -o -d ~/.android-certs \\    --extra_apks AdServicesApk.apk=$HOME/.android-certs/releasekey \\    --extra_apks FederatedCompute.apk=$HOME/.android-certs/releasekey \\    --extra_apks HalfSheetUX.apk=$HOME/.android-certs/releasekey \\    --extra_apks HealthConnectBackupRestore.apk=$HOME/.android-certs/releasekey \\    --extra_apks HealthConnectController.apk=$HOME/.android-certs/releasekey \\    --extra_apks OsuLogin.apk=$HOME/.android-certs/releasekey \\    --extra_apks SafetyCenterResources.apk=$HOME/.android-certs/releasekey \\    --extra_apks ServiceConnectivityResources.apk=$HOME/.android-certs/releasekey \\    --extra_apks ServiceUwbResources.apk=$HOME/.android-certs/releasekey \\    --extra_apks ServiceWifiResources.apk=$HOME/.android-certs/releasekey \\    --extra_apks WifiDialog.apk=$HOME/.android-certs/releasekey \\    --extra_apks com.android.adbd.apex=$HOME/.android-certs/com.android.adbd \\    --extra_apks com.android.adservices.apex=$HOME/.android-certs/com.android.adservices \\    --extra_apks com.android.adservices.api.apex=$HOME/.android-certs/com.android.adservices.api \\    --extra_apks com.android.appsearch.apex=$HOME/.android-certs/com.android.appsearch \\    --extra_apks com.android.appsearch.apk.apex=$HOME/.android-certs/com.android.appsearch.apk \\    --extra_apks com.android.art.apex=$HOME/.android-certs/com.android.art \\    --extra_apks com.android.bluetooth.apex=$HOME/.android-certs/com.android.bluetooth \\    --extra_apks com.android.btservices.apex=$HOME/.android-certs/com.android.btservices \\    --extra_apks com.android.cellbroadcast.apex=$HOME/.android-certs/com.android.cellbroadcast \\    --extra_apks com.android.compos.apex=$HOME/.android-certs/com.android.compos \\    --extra_apks com.android.configinfrastructure.apex=$HOME/.android-certs/com.android.configinfrastructure \\    --extra_apks com.android.connectivity.resources.apex=$HOME/.android-certs/com.android.connectivity.resources \\    --extra_apks com.android.conscrypt.apex=$HOME/.android-certs/com.android.conscrypt \\    --extra_apks com.android.devicelock.apex=$HOME/.android-certs/com.android.devicelock \\    --extra_apks com.android.extservices.apex=$HOME/.android-certs/com.android.extservices \\    --extra_apks com.android.graphics.pdf.apex=$HOME/.android-certs/com.android.graphics.pdf \\    --extra_apks com.android.hardware.authsecret.apex=$HOME/.android-certs/com.android.hardware.authsecret \\    --extra_apks com.android.hardware.biometrics.face.virtual.apex=$HOME/.android-certs/com.android.hardware.biometrics.face.virtual \\    --extra_apks com.android.hardware.biometrics.fingerprint.virtual.apex=$HOME/.android-certs/com.android.hardware.biometrics.fingerprint.virtual \\    --extra_apks com.android.hardware.boot.apex=$HOME/.android-certs/com.android.hardware.boot \\    --extra_apks com.android.hardware.cas.apex=$HOME/.android-certs/com.android.hardware.cas \\    --extra_apks com.android.hardware.neuralnetworks.apex=$HOME/.android-certs/com.android.hardware.neuralnetworks \\    --extra_apks com.android.hardware.rebootescrow.apex=$HOME/.android-certs/com.android.hardware.rebootescrow \\    --extra_apks com.android.hardware.wifi.apex=$HOME/.android-certs/com.android.hardware.wifi \\    --extra_apks com.android.healthfitness.apex=$HOME/.android-certs/com.android.healthfitness \\    --extra_apks com.android.hotspot2.osulogin.apex=$HOME/.android-certs/com.android.hotspot2.osulogin \\    --extra_apks com.android.i18n.apex=$HOME/.android-certs/com.android.i18n \\    --extra_apks com.android.ipsec.apex=$HOME/.android-certs/com.android.ipsec \\    --extra_apks com.android.media.apex=$HOME/.android-certs/com.android.media \\    --extra_apks com.android.media.swcodec.apex=$HOME/.android-certs/com.android.media.swcodec \\    --extra_apks com.android.mediaprovider.apex=$HOME/.android-certs/com.android.mediaprovider \\    --extra_apks com.android.nearby.halfsheet.apex=$HOME/.android-certs/com.android.nearby.halfsheet \\    --extra_apks com.android.networkstack.tethering.apex=$HOME/.android-certs/com.android.networkstack.tethering \\    --extra_apks com.android.neuralnetworks.apex=$HOME/.android-certs/com.android.neuralnetworks \\    --extra_apks com.android.nfcservices.apex=$HOME/.android-certs/com.android.nfcservices \\    --extra_apks com.android.ondevicepersonalization.apex=$HOME/.android-certs/com.android.ondevicepersonalization \\    --extra_apks com.android.os.statsd.apex=$HOME/.android-certs/com.android.os.statsd \\    --extra_apks com.android.permission.apex=$HOME/.android-certs/com.android.permission \\    --extra_apks com.android.profiling.apex=$HOME/.android-certs/com.android.profiling \\    --extra_apks com.android.resolv.apex=$HOME/.android-certs/com.android.resolv \\    --extra_apks com.android.rkpd.apex=$HOME/.android-certs/com.android.rkpd \\    --extra_apks com.android.runtime.apex=$HOME/.android-certs/com.android.runtime \\    --extra_apks com.android.safetycenter.resources.apex=$HOME/.android-certs/com.android.safetycenter.resources \\    --extra_apks com.android.scheduling.apex=$HOME/.android-certs/com.android.scheduling \\    --extra_apks com.android.sdkext.apex=$HOME/.android-certs/com.android.sdkext \\    --extra_apks com.android.support.apexer.apex=$HOME/.android-certs/com.android.support.apexer \\    --extra_apks com.android.telephony.apex=$HOME/.android-certs/com.android.telephony \\    --extra_apks com.android.telephonymodules.apex=$HOME/.android-certs/com.android.telephonymodules \\    --extra_apks com.android.tethering.apex=$HOME/.android-certs/com.android.tethering \\    --extra_apks com.android.tzdata.apex=$HOME/.android-certs/com.android.tzdata \\    --extra_apks com.android.uwb.apex=$HOME/.android-certs/com.android.uwb \\    --extra_apks com.android.uwb.resources.apex=$HOME/.android-certs/com.android.uwb.resources \\    --extra_apks com.android.virt.apex=$HOME/.android-certs/com.android.virt \\    --extra_apks com.android.vndk.current.apex=$HOME/.android-certs/com.android.vndk.current \\    --extra_apks com.android.vndk.current.on_vendor.apex=$HOME/.android-certs/com.android.vndk.current.on_vendor \\    --extra_apks com.android.wifi.apex=$HOME/.android-certs/com.android.wifi \\    --extra_apks com.android.wifi.dialog.apex=$HOME/.android-certs/com.android.wifi.dialog \\    --extra_apks com.android.wifi.resources.apex=$HOME/.android-certs/com.android.wifi.resources \\    --extra_apks com.google.pixel.camera.hal.apex=$HOME/.android-certs/com.google.pixel.camera.hal \\    --extra_apks com.google.pixel.vibrator.hal.apex=$HOME/.android-certs/com.google.pixel.vibrator.hal \\    --extra_apks com.qorvo.uwb.apex=$HOME/.android-certs/com.qorvo.uwb \\    --extra_apex_payload_key com.android.adbd.apex=$HOME/.android-certs/com.android.adbd.pem \\    --extra_apex_payload_key com.android.adservices.apex=$HOME/.android-certs/com.android.adservices.pem \\    --extra_apex_payload_key com.android.adservices.api.apex=$HOME/.android-certs/com.android.adservices.api.pem \\    --extra_apex_payload_key com.android.appsearch.apex=$HOME/.android-certs/com.android.appsearch.pem \\    --extra_apex_payload_key com.android.appsearch.apk.apex=$HOME/.android-certs/com.android.appsearch.apk.pem \\    --extra_apex_payload_key com.android.art.apex=$HOME/.android-certs/com.android.art.pem \\    --extra_apex_payload_key com.android.bluetooth.apex=$HOME/.android-certs/com.android.bluetooth.pem \\    --extra_apex_payload_key com.android.btservices.apex=$HOME/.android-certs/com.android.btservices.pem \\    --extra_apex_payload_key com.android.cellbroadcast.apex=$HOME/.android-certs/com.android.cellbroadcast.pem \\    --extra_apex_payload_key com.android.compos.apex=$HOME/.android-certs/com.android.compos.pem \\    --extra_apex_payload_key com.android.configinfrastructure.apex=$HOME/.android-certs/com.android.configinfrastructure.pem \\    --extra_apex_payload_key com.android.connectivity.resources.apex=$HOME/.android-certs/com.android.connectivity.resources.pem \\    --extra_apex_payload_key com.android.conscrypt.apex=$HOME/.android-certs/com.android.conscrypt.pem \\    --extra_apex_payload_key com.android.devicelock.apex=$HOME/.android-certs/com.android.devicelock.pem \\    --extra_apex_payload_key com.android.extservices.apex=$HOME/.android-certs/com.android.extservices.pem \\    --extra_apex_payload_key com.android.graphics.pdf.apex=$HOME/.android-certs/com.android.graphics.pdf.pem \\    --extra_apex_payload_key com.android.hardware.authsecret.apex=$HOME/.android-certs/com.android.hardware.authsecret.pem \\    --extra_apex_payload_key com.android.hardware.biometrics.face.virtual.apex=$HOME/.android-certs/com.android.hardware.biometrics.face.virtual.pem \\    --extra_apex_payload_key com.android.hardware.biometrics.fingerprint.virtual.apex=$HOME/.android-certs/com.android.hardware.biometrics.fingerprint.virtual.pem \\    --extra_apex_payload_key com.android.hardware.boot.apex=$HOME/.android-certs/com.android.hardware.boot.pem \\    --extra_apex_payload_key com.android.hardware.cas.apex=$HOME/.android-certs/com.android.hardware.cas.pem \\    --extra_apex_payload_key com.android.hardware.neuralnetworks.apex=$HOME/.android-certs/com.android.hardware.neuralnetworks.pem \\    --extra_apex_payload_key com.android.hardware.rebootescrow.apex=$HOME/.android-certs/com.android.hardware.rebootescrow.pem \\    --extra_apex_payload_key com.android.hardware.wifi.apex=$HOME/.android-certs/com.android.hardware.wifi.pem \\    --extra_apex_payload_key com.android.healthfitness.apex=$HOME/.android-certs/com.android.healthfitness.pem \\    --extra_apex_payload_key com.android.hotspot2.osulogin.apex=$HOME/.android-certs/com.android.hotspot2.osulogin.pem \\    --extra_apex_payload_key com.android.i18n.apex=$HOME/.android-certs/com.android.i18n.pem \\    --extra_apex_payload_key com.android.ipsec.apex=$HOME/.android-certs/com.android.ipsec.pem \\    --extra_apex_payload_key com.android.media.apex=$HOME/.android-certs/com.android.media.pem \\    --extra_apex_payload_key com.android.media.swcodec.apex=$HOME/.android-certs/com.android.media.swcodec.pem \\    --extra_apex_payload_key com.android.mediaprovider.apex=$HOME/.android-certs/com.android.mediaprovider.pem \\    --extra_apex_payload_key com.android.nearby.halfsheet.apex=$HOME/.android-certs/com.android.nearby.halfsheet.pem \\    --extra_apex_payload_key com.android.networkstack.tethering.apex=$HOME/.android-certs/com.android.networkstack.tethering.pem \\    --extra_apex_payload_key com.android.neuralnetworks.apex=$HOME/.android-certs/com.android.neuralnetworks.pem \\    --extra_apex_payload_key com.android.nfcservices.apex=$HOME/.android-certs/com.android.nfcservices.pem \\    --extra_apex_payload_key com.android.ondevicepersonalization.apex=$HOME/.android-certs/com.android.ondevicepersonalization.pem \\    --extra_apex_payload_key com.android.os.statsd.apex=$HOME/.android-certs/com.android.os.statsd.pem \\    --extra_apex_payload_key com.android.permission.apex=$HOME/.android-certs/com.android.permission.pem \\    --extra_apex_payload_key com.android.profiling.apex=$HOME/.android-certs/com.android.profiling.pem \\    --extra_apex_payload_key com.android.resolv.apex=$HOME/.android-certs/com.android.resolv.pem \\    --extra_apex_payload_key com.android.rkpd.apex=$HOME/.android-certs/com.android.rkpd.pem \\    --extra_apex_payload_key com.android.runtime.apex=$HOME/.android-certs/com.android.runtime.pem \\    --extra_apex_payload_key com.android.safetycenter.resources.apex=$HOME/.android-certs/com.android.safetycenter.resources.pem \\    --extra_apex_payload_key com.android.scheduling.apex=$HOME/.android-certs/com.android.scheduling.pem \\    --extra_apex_payload_key com.android.sdkext.apex=$HOME/.android-certs/com.android.sdkext.pem \\    --extra_apex_payload_key com.android.support.apexer.apex=$HOME/.android-certs/com.android.support.apexer.pem \\    --extra_apex_payload_key com.android.telephony.apex=$HOME/.android-certs/com.android.telephony.pem \\    --extra_apex_payload_key com.android.telephonymodules.apex=$HOME/.android-certs/com.android.telephonymodules.pem \\    --extra_apex_payload_key com.android.tethering.apex=$HOME/.android-certs/com.android.tethering.pem \\    --extra_apex_payload_key com.android.tzdata.apex=$HOME/.android-certs/com.android.tzdata.pem \\    --extra_apex_payload_key com.android.uwb.apex=$HOME/.android-certs/com.android.uwb.pem \\    --extra_apex_payload_key com.android.uwb.resources.apex=$HOME/.android-certs/com.android.uwb.resources.pem \\    --extra_apex_payload_key com.android.virt.apex=$HOME/.android-certs/com.android.virt.pem \\    --extra_apex_payload_key com.android.vndk.current.apex=$HOME/.android-certs/com.android.vndk.current.pem \\    --extra_apex_payload_key com.android.vndk.current.on_vendor.apex=$HOME/.android-certs/com.android.vndk.current.on_vendor.pem \\    --extra_apex_payload_key com.android.wifi.apex=$HOME/.android-certs/com.android.wifi.pem \\    --extra_apex_payload_key com.android.wifi.dialog.apex=$HOME/.android-certs/com.android.wifi.dialog.pem \\    --extra_apex_payload_key com.android.wifi.resources.apex=$HOME/.android-certs/com.android.wifi.resources.pem \\    --extra_apex_payload_key com.google.pixel.camera.hal.apex=$HOME/.android-certs/com.google.pixel.camera.hal.pem \\    --extra_apex_payload_key com.google.pixel.vibrator.hal.apex=$HOME/.android-certs/com.google.pixel.vibrator.hal.pem \\    --extra_apex_payload_key com.qorvo.uwb.apex=$HOME/.android-certs/com.qorvo.uwb.pem \\    $OUT/obj/PACKAGING/target_files_intermediates/*-target_files*.zip \\    signed-target_files.zip\n生成安装包。现在，要生成可安装的 zip，请运行：ota_from_target_files -k ~/.android-certs/releasekey \\    --block --backup=true \\    signed-target_files.zip \\    signed-ota_update.zip\n然后，像往常一样在 recovery 中安装 zip。\n\n指令注解：mka target-files-package otatools是用于 Android 系统编译的命令，其作用可分为两部分：\ntarget-files-package​​功能​​：生成一个名为 ​​target-files.zip​​ 的中间文件包，包含构建完整 OTA 更新包所需的全部内容：\n\n系统镜像：system.img、vendor.img、boot.img 等。\n设备文件：内核、设备树（dtbo）、专有二进制文件（Blobs）。\n元数据：构建指纹（Build Fingerprint）、文件系统结构（META&#x2F; 目录）。\n\n用途：\n生成OTA增量包（如 incremental_ota_update.zip）。\n签名系统镜像（例如用于发布官方固件）。\n\notatools​​功能​​：编译与 OTA 相关的工具链，包括：​​- ota_from_target_files​​：将 target-files.zip 转换为最终 OTA 包的脚本。​​- sign_target_files_apks​​：签名系统镜像的工具。​​- img2simg&#x2F;simg2img​​：处理稀疏镜像（Sparse Image）的工具。​​路径​​：编译后的工具默认存放在 out&#x2F;host&#x2F;linux-x86&#x2F;bin&#x2F;（Linux 环境下）。\n完整命令的作用同时执行以下两个任务：\n\n生成 target-files.zip（位于 out&#x2F;target&#x2F;product&#x2F;&#x2F;obj&#x2F;PACKAGING&#x2F;target_files_intermediates&#x2F;）。\n编译 OTA 工具链（生成 otatools 相关二进制文件）。\n\n典型使用场景生成完整 OTA包\n生成 target-files.zip\n\nmka target-files-package\n\n生成完整 OTA 包（-k 指定签名密钥）\n\n./out/host/linux-x86/bin/ota_from_target_files -k ./keys/releasekey \\  out/target/product/kebab/obj/PACKAGING/target_files_intermediates/*.zip \\  lineage-21.0-unsigned-kebab-ota.zip\n\n生成增量 OTA 包\n生成旧版本 target-files.zip（例如旧系统版本）切换到旧版本代码分支\n\ngit checkout old-release-branch\n清理旧构建产物（确保无残留）\nmka clean\n设置构建环境\nsource build/envsetup.shlunch &lt;product_name&gt;-userdebug  --&gt;替换为具体设备名\n构建 target-files.zip\nmka target-files-package\n\n生成新版本 target-files.zip（例如新系统版本）切换到新版本代码分支\n\ngit checkout new-release-branch\n清理构建环境（关键！避免旧版本干扰）\nmka installclean\n重新设置环境\nsource build/envsetup.shlunch &lt;product_name&gt;-userdebug  #这里需要确保与旧版本同一设备名\n构建 target-files.zip\nmka target-files-package\n\n生成增量包（需指定新旧两个 target-files.zip）\n\n# 1. 进入AOSP构建目录cd &lt;path-to-android-source&gt;# 2. 初始化构建环境source build/envsetup.shlunch &lt;product_name&gt;-userdebug  --&gt; 选择相同的设备名# 3. 执行增量包生成（关键步骤）./out/host/linux-x86/bin/ota_from_target_files \\  -k vendor/releasekeys/releasekey \\    --&gt; 签名密钥（必须指定）  -i old-target_files.zip \\             --&gt; 旧版本target-files  new-target_files.zip \\                --&gt; 新版本target-files  incremental-ota_update.zip            --&gt; 输出的增量包名\n\n验证生成的增量包\n\nunzip -l incremental-ota_update.zip\n请确认包含以下关键文件：\n\nMETA-INF&#x2F;com&#x2F;google&#x2F;android&#x2F;update-binary\npatch&#x2F;\nsystem.new.dat\n\n\n注意事项​​​​1.依赖关系​​：执行此命令前需确保已完成完整系统编译（例如已执行 brunch kebab）。​​2.签名密钥​​：发布正式 OTA 包需使用私钥签名（-k 参数），测试时可跳过签名步骤。​​3.路径适配​​：根据实际设备代号（如 kebab）和编译环境（如 linux-x86）调整路径。⚠️ 注意：两个版本的 lunch 必须选择相同的 -userdebug，否则会导致 OTA 包生成失败。注解：linux-x86 表示你的主机是 ​​Linux 操作系统 + x86 架构的 CPU​​。如果你在 macOS 上编译，目录会变成 darwin-x86 或 darwin-arm64（Apple Silicon）。这一目录是 Android 编译系统自动生成的，无需手动干预。\n\n\ntarget-files.zip 结构示例​​：├── BOOT&#x2F;├── IMAGES&#x2F;          –&gt;系统镜像（system.img, vendor.img 等）├── META&#x2F;            –&gt; 元数据（构建信息、文件列表）├── OTA&#x2F;             –&gt; OTA 更新脚本└── SYSTEM&#x2F;          –&gt; 系统文件（未打包成镜像的原始文件）\n","categories":["lineageOS编译"],"tags":["lineageOS"]},{"title":"计算机资源超集合(持续更新)","url":"/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%B5%84%E6%BA%90%E8%B6%85%E9%9B%86%E5%90%88/","content":"本系列所有文章\n在线工具(持续更新)计算机资源超集合(持续更新)\n\n你可以通过使用右下角的小齿轮，来开启黑夜模式和阅读模式。\n\n\n为什么会有这个页面\n\n 本页面是自学编程资源和分享内容的大聚合。\n 旨在为编程自学者提供一系列：\n\n清晰的编程自学路线\n各编程岗位方向的知识点梳理\n靠谱的资源\n高效的工具\n务实的技术文章\n\n方便自己也方便他人。本页面会保持持续更新，欢迎收藏品鉴！\n\n\n编程自学路线+知识大梳理\n\n 本页面目前整理收录了6个大方向（岗位）的学习路线+知识点大梳理，分别为：\n\nJava后端开发\n前端开发\nC&#x2F;C++后台开发\n大数据开发\n嵌入式开发\n网络安全方向\n\n\n后续本站也会持续更新和增加更多的内容…\n\n常用编程软件和工具\n\n工欲善其事，必先利其器！\n\n一个易上手、好用、高效的软件工具对于程序员工作效率的提升是不言而喻的，这些常用开发软件和工具比如：\n\n\n基础的软件开发环境和设施\n好用高效的在线工具和网站\n本地常用的一些编程软件\nLinux操作系统\n版本控制工具\n高效的IDE和编辑器\nAPI管理工具&#x2F;文档管理工具\nCI守护系统\n…… 等等\n\n\n\n常用在线工具集\n\n程序员在平时的日常工作、学习、开发、做笔记、写博客等过程中还是有很多好用并且高效的在线工具推荐的，毕竟我们不是每时每刻我们都需要那种很重量级的本地软件。下面将分成16个大类，共整理了约130+个常用的在线工具和网站供大家食用。\n\n\n\n\n在线画图工具程序员经常接触的无非也就是流程图、思维导图、原型图、UML图、网络拓扑图、组织结构图等等这些。下面这3个在线画图网站我想应该足够了，其中那个processon是我用得最多的，历史文章中几乎所有相关的图形都是用它绘制，然后导出图片的。\n\n在线画图工具ProcessOn\n在线画图工具Draw.io\n在线思维导图工具MindLine\n\n在线编解码工具\nBASE64编解码工具\nMD5编码工具\nAES&#x2F;DES加解密\nJWT解码工具\nASCII编解码工具\nUnicode编解码工具\nUTF-8编解码工具\n字符串编解码工具\nURL编解码工具\n\n在线转换工具\n在线ASCII码对照表\n通用进制转换工具\n在线浮点数十进制转换\nRGB颜色转换\n时间戳转换工具\n计量单位换算工具\n在线JSON解析\n在线JS代码格式化工具\nSQL压缩&#x2F;格式化工具\nJSON和XML在线转换\nJSON&#x2F;YAML在线转换\n人民币大小写转换工具\n\n正则表达式工具\n正则表达式调试工具\n正则表达式可视化工具\n\n网络工具\nIP地址归属地查询\nIP地址查询\nHTTP在线接口测试工具\n\n在线编译运行工具\nC#在线编译运行\nC&#x2F;C++在线编译调试\n在线编译工具套装\n\n可视化&#x2F;格式化工具\n在线前端编辑器\n在线数据可视化\n在线JSON解析\n在线CSS代码可视化工具\nXML格式化工具\n在线JS代码格式化工具\nSQL压缩&#x2F;格式化工具\nJSON和XML在线转换\nJSON&#x2F;YAML在线转换\n\n在线生成器\nUUID在线生成器\n随机数生成器\n\n其他常用在线开发相关工具\n在线Nginx配置工具\n在线文本代码比对工具\n在线Chrome浏览器插件\n在线接口文档管理工具\n\n在线素材工具\n\n如果你也写文章，或者做视频，那就一定少不了要找素材，包括各种图片、背景、emoji表情、表情包、壁纸、视频、gif图等等。\n如此一来，那些好用的在线素材工具就必不可少了，比如像各种表情包工具、icon图标库、矢量图库、图片素材库、壁纸库等等。\n\n\n\n免费透明背景图片素材\nEmoji表情包下载\nopen source icons\n阿里巴巴矢量图标库\n表情包在线网站\n免费PNG图片库\nICON图标在线下载\n极简壁纸\nWallpaper Abyss壁纸\nPixabay图片素材库\nUnsplash图片素材库\nPexels图片素材库\nNASA图片视频素材库\n\n设计制作类工具\n\n对于那些文章创作者和视频创作者而言，设计封面，做海报，设计LOGO，图片美化等等基本也是刚需。\n这样大概率日常会用到一些简易好上手的在线设计制作类工具，比如在线P图、音&#x2F;视频轻量化剪辑、logo制作、海报设计制作、图片美化、在线图片转换或生成等等，毕竟不是每时每刻我们都需要那种重量级的本地软件。\n\n\n\n在线PS\n在线音频剪辑\n在线视频剪辑\n免费logo在线制作\n艺术字体在线生成\n在线表格转换工具\n在线海报设计工具\n图片智能放大工具\n二维码美化器\n在线代码截图工具\n在线抠图工具\nICO图标在线生成\nSVG转PNG工具\n视频转GIF工具\n二维码在线生成器\n二维码在线解码\n\n写作辅助工具\n\n在写文章的过程中经常会用到和写作相关的辅助工具，比方说：字数统计工具、Markdown格式的文章排版工具、图床网站、代码截图工具等等，所以下面这些在线工具就能很好地满足需求。\n\n\n\n在线字数统计\nmdnice markdown排版工具\nmd2all markdown排版工具\n在线图床神器\n在线免费图床\n图壳图床\n在线代码截图工具\n在线短链接工具\n在线文本替换\n\n在线办公工具\n\n这部分在线工具主要用来处理一些和文档以及文稿相关的事情，经常用到的比如：在线的全套pdf处理和转换工具、各种各样多媒体文件间的相互转换工具、在线识别工具、在线压缩工具等等。\n\n\n\npdf在线处理工具套装1\npdf在线处理工具套装2\npdf转word在线工具\n在线多媒体转换器合集\n在线文字识别工具\n在线文件压缩工具\n\n文档笔记工具\n\n好记性不如烂笔头，作为一个学习者，我觉得记笔记是必不可少的步骤。当然现在基本都做电子笔记和电子文档比较多。\n现如今各式各样优秀的文档工具和笔记软件鳞次栉比，好用的也有很多，整理成如下列表，这东西各有长处，使用哪个最合意还得看个人习惯和需求了。\n\n\n\n印象笔记\n有道笔记\nOneNote\n幕布\n为知笔记\n石墨文档\nSimplenote\n语雀\n\n编程学习网\n哔哩哔哩\nC语言网\ncppreference\n中国大学MOOC\n牛客网\n网易公开课\nCodeGym\nBeginnersBook\nJavaSED\ncodecademy\nCoursera\nStackOverFlow\nLeetCode\nLintCode\n\n在线教程和文档\n\n这部分主要集中了在做开发过程中随手参考所要用到的几乎所有在线教程和官方文档，有中文版文档的我基本都优先列出来了，但更多时候是英文的官方文档。\n\n\n\n\n\n\n\nGit中文教程\nSVN中文手册\njQuery API中文文档\nNginx中文文档\nKafka中文文档\nMybatis中文文档\n微信小程序官方文档\nNodejs中文教程文档\nApache Web Server文档\nSpring文档中文版\nGolang标准库文档中文版\nJava 8官方文档\nMaven官方文档\nTomcat 8官方文档\n\n\n\n\nSpring Boot官方文档\nRabbitMQ官方文档\nRocketMQ官方文档\nDubbo中文文档\nNetty官方文档\nElasticsearch官方文档\nSpring Cloud官方文档\nDocker官方文档\nKubernetes中文文档\nThymeleaf官方文档\nVue.js中文文档\nReact.js官方文档\nJenkins中文文档\n\n\n\n\n\n\n常用本地软件\n\n        \n    \n\n\n这里将常用软件分为了5大类，包括：\n\n\n社交&#x2F;娱乐&#x2F;上网\n办公软件\n效率和美化软件\nUP主必备\n程序员生产力工具\n\n\n\n基础软件开发环境和设施\n\n 什么叫基础软件开发环境？\n 很好理解。学Java得要装JDK吧？学Python得要Python环境吧？学数据库得要MySQL吧？等等，这些在学习编程之前都是应该提前在自己的电脑上准备好的，而且尽量把全套都先备好，后面直接就用了。\n\n内容包含常见基础开发环境和设施的安装部署，包括：\n\n\nLinux操作系统\nGit工具\nJava环境JDK\nNode基础环境\nPython基础环境\nMaven项目构建和管理\nMySQL数据库\nRedis缓存\nRabbitMQ消息队列\nTomcat应用服务器\nNginx Web服务器\nDocker环境\nKubernetes环境\nElasticsearch搜索引擎\nZooKeeer环境\nKafka消息队列\n\n\n\nLinux操作系统\n\n 实际企业级开发和项目部署，大部分情况下基本都是基于Linux环境进行的，所以掌握常用的命令、配置、网络和系统管理、基本的Shell编程等尽量还是要熟练一些，对后续项目实践都大有裨益。\n\n\n版本控制工具\n\n        \n    \n\n\n\n资源下载 → 豆瓣9.1分的Pro Git学习手册YYDS！\n科普篇：Git和SVN对比\n科普篇：5分钟了解Git的前世今生\n科普篇：Git操作与常用命令集锦\n原理篇：图解Git中的最常用命令\n原理篇：从原理角度理解记忆Git常见命令\n实践篇：从实践中彻底上手Git\n实践篇：Git分支开发\n实践篇：如何使用GitHub Flow给开源项目贡献代码\n技巧篇：一招搞定GitHub下载加速！\n技巧篇：如何在同一台电脑上同时使用多个Git账号\n\n\nIDE&#x2F;编辑器\n        \n    \n\n\n\nIDEA 2021.2升级体验\nIDEA 2021.1升级体验\nIDEA 2020.3升级体验\nIDEA 2020.1升级体验\nIDEA插件分享：开发必备的IDEA神级插件大分享\n我的IDEA写代码小技巧：幸福感+效率爆棚\n为啥我的IDEA Maven依赖下载总是失败？\n试水JetBrains官方新编程字体\n如何使用IDEA远程调试线上代码\n利用VS Code进行远程开发教程\nVS Code常用插件+快捷键整理\n\n\nAPI管理&#x2F;文档管理\n\n        \n    \n\n\n\n科普篇：前后端都分离了，有哪些好用的API管理系统？\n科普篇：几款常用的在线文档神器\n一款零注解API接口文档生成工具\n\n\nCI系统\n\n        \n    \n\n\n\n常用CI工具大盘点\nJenkins Pipeline使用入门\n讨论：你们公司用啥CI守护系统？\n\n其他软件&#x2F;工具&#x2F;网站\n自学数据结构和算法的9大工具和网站\n12个常见的编程开发自学网站汇总\n常用Web服务器软件大盘点\n9款最佳编程字体推荐\n5款时间管理工具推荐\n一个程序员的常用在线工具网站分享\n2020年度开发者工具Top 100名单\nLinux服务器上几个常用的监控小工具整理\n效率神器PowerToys使用攻略\n22款适合程序员的终端生产力小工具推荐\n9款优秀的代码比对工具推荐\n几款提升效率的软件神器\n命令行效率神器 NuShell ！\n\n\n计算机基础\n\n 计算机基础是最最重要的！即使后面的东西都没学（或者来不及学），基础部分是肯定需要完成的，这也是后面所有应用框架学习和做项目的基石；反之，在应用框架的学习或者做项目时如果感觉吃力，那就可能非常有必要回过头再来巩固对应的基础知识。 计算机基础的学习不是一蹴而就的，需要一定的反复和回炉才能做到真正的融会贯通，需要一个过程。珍惜每一次回顾和复习基础的机会，应扎实精进，步步为营。 那我们口口声声所说的编程基础（计算机基础）到底指是什么呢？ 此处整理为六大方面：\n\n一两门你最熟悉的编程语言（不求多，但求精！）\n数据结构和算法\n计算机网络\n操作系统（计组）\n数据库&#x2F;SQL\n设计模式\n\n\n\n编程语言\n\n 语言在精不在多，切记！完全掌握了一门语言，上手其他的都不难！\n\n\n\n\nJava\n基本功趣味学习（精讲）\n\n资源下载 → Java基础核心知识大总结pdf笔记下载\n夯实基本功之：Java程序员找对象攻虐！\n夯实基本功之：浮点数在计算机中是如何表示的\n夯实基本功之：flaot和double使用时的大坑\n夯实基本功之：为什么要面向接口编程\n夯实基本功之：枚举精讲\n夯实基本功之：深拷贝&#x2F;浅拷贝精讲\n夯实基本功之：序列化和反序列化精讲\n夯实基本功之：函数式编程例析\n夯实基本功之：如何去掉冗长的if&#x2F;else代码\n夯实基本功之：注解精讲\n夯实基本功之：为什么不要用Date表示时间\n夯实基本功之：去除烦人的NullPointerException空指针异常\n夯实基本功之：为什么要重写hashcode和equals方法\n夯实基本功之：Object类精讲\n夯实基本功之：List使用踩坑记录\n夯实基本功之：Map使用踩坑记录\n夯实基本功之：面试必问的ConcurrentHashMap精讲\n夯实基本功之：死磕Java I&#x2F;O流知识\n夯实基本功之：你一般是怎么遍历HashMap的\n夯实基本功之：try-catch的使用姿势\n夯实基本功之：if和swictch性能例析\n夯实基本功之：Java HashMap源码剖析\n夯实基本功之：String性能提升10倍的几个用法\n实践篇：Java源码编译实战\n面试篇：这10道基础Java面试题，虐哭了多少人\n面试篇：Java基础知识面试题大集合\nJava 11新特性例析\nJava 15新特性例析\n科普：Java收不收费跟我们有毛关系吗？\n\n\n多线程和并发\n\n资源下载 → Java多线程+并发编程知识点详细总结PDF文档下载！\n夯实基本功之：Java并发之原子性、有序性、可见性\n夯实基本功之：ThreadLocal源码剖析\n夯实基本功之：Java线程池使用例析\n夯实基本功之：彻底搞懂多线程中的volatile\n夯实基本功之：面试必问的ConcurrentHashMap精讲\n夯实基本功之：详解Java并发编程中的各种锁\nJava并发和多线程基础面试题大集合\n科普向：Java线程和操作系统的线程到底有啥区别？\n\n\nJVM虚拟机\n\n夯实基本功之：Java内存模型精讲\n夯实基本功之：面试必问的JVM GC机制\n夯实基本功之：JVM垃圾回收硬核18问（附答案）\n夯实基本功之：搞懂JVM的三大参数类型\n夯实基本功之：了解G1垃圾收集器\n实践篇：JDK源码编译上手实践\n实践篇：线上服务的YGC问题排查例析\n实践篇：线上服务的FGC问题排查例析\n面试题：Java虚拟机（JVM）面试题大集合1\n面试题：Java虚拟机（JVM）面试题大集合2\n\n\n\nC语言\n待更新…\n\nC++\n待更新…\n\nGolang\n待更新…\n\n\n\n\n数据结构+算法题\n\n 数据结构和算法题对于程序员的重要性不言而喻。参加过笔试或者面试过的小伙伴应该知道，可以说这个东西某一程度上直接决定了面试的成败，现在的互联网公司技术岗面试，数据结构+算法题基本都是必选项。除了几种基础数据结构类型得烂熟于心，基本的几大算法(或者说算法思想)也要了如指掌之外，参加求职前，不论是校招还是社招，非常有必要好好刷一刷LeetCode上的数据结构和算法题，以保持题感。\n\n\n\n资源下载 → LeetCode算法刷题Golang版答案PDF文档\n资源下载 → LeetCode算法刷题C++版答案PDF文档\n资源下载 → LeetCode算法刷题Java版答案PDF文档\n资源下载 → 谷歌学长的数据结构+算法题代码笔记手册\n数据结构：24张图详解九大数据结构\n数据结构：哈希表详解\n数据结构：栈Stack的几种含义理解\n数据结构：各种树详解\n数据结构：跳表精讲\n数据结构：数组和链表的性能对比\n算法：十大经典排序算法大梳理 (动图+代码)\n算法：排序算法趣味对比\n算法：二分法及其变种\n算法：10张图搞定KMP算法\n算法：面试官最爱的字符串匹配算法精讲\n算法：8大常见算法思想总结\n算法：一文彻底学会递归思路解题\n算法：10张动图理解递归\n算法：分治算法详解\n算法：递归算法详解\n算法：动态规划常见算法题例析\n算法：搞定算法复杂度分析\n算法：常用算法复杂度速查表\n算法：常见刷题模式套路分析\n算法：算法题刷题的心得和建议\n算法：求职必刷算法题大集锦\n工具推荐：自学数据结构和算法的9大工具和网站\n\n\n计算机网络\n\n 为什么一定要学好计算机网络？原因很简单，因为计算机网络中的各种协议栈是当下繁荣的互联网通信的基石，尤其建议要牢固熟练地掌握TCP&#x2F;IP协议栈。\n\n\n\n视频科普：计算机网络该怎么学\n概念科普：如何系统地学习计算机网络\n概念科普：计算机网络的89个核心概念\n工具科普：学网络时，可以先落实这几款利器工具\n探究原理：浏览器输入网址一回车，后面到底发生了什么\n探究原理：你可能没有细究过的TCP&#x2F;IP\n探究原理：一个数据包在网络中到底是怎么游走的\n探究原理：两台计算机之间究竟是如何通信的\n探究原理：ping命令用得这么6，原理知道不\n探究原理：一台Linux服务器最多能支撑多少个TCP连接\n探究原理：都说HTTP协议无状态，这里的「状态」到底指什么\n探究原理：Session&#x2F;Cookie&#x2F;Token\n探究原理：三次握手底层深度理解\n知识总结：计网IP部分知识总结\n知识总结：图解HTTP的前世今生\n知识总结：HTTP和HTTPS协议大总结\n面试相关：GET和POST到底有什么区别\n面试相关：面试最爱问的三次握手和四次挥手问题\n面试相关：HTTP常见面试题集合\n面试相关：计网TCP&#x2F;UDP部分高频面试题集合\n面试相关：计算机网络高频12问\n实践系列：网络排错思路大总结\n实践系列：抓个包看一看浏览器里的HTTP请求到底是如何完成的\n\n\n操作系统\n\n 学好操作系统有利于我们深入理解计算机底层，这样平时在遇到疑难杂症时，能够更容易看到问题的本质，并高效解决；另外操作系统里的很多优秀的设计思想、经典的架构、算法、思路也值得我们反复理解和思考，很多思想在平时的工作中也可以借鉴和运用。\n\n\n\n知识总结：学编程要懂的操作系统基础\n知识总结：程序员必知的89个操作系统核心概念\n知识总结：操作系统主要概念硬核讲解\n知识总结：20张图详解操作系统内存管理部分知识点\n知识总结：这才是对进程和线程最通俗易懂的解释\n知识总结：操作系统并发三剑客之进程&#x2F;线程&#x2F;协程\n知识总结：操作系统高并发服务模型大科普\n知识总结：这可能是讲死锁最通俗的一篇文章\n知识总结：一举拿下网络IO模型\n知识总结：用一个故事来感受一下什么叫NIO\n知识总结：多路复用、非阻塞、线程与协程\n知识总结：搞懂原码&#x2F;反码&#x2F;补码\n知识总结：30张图解高并发服务模型哪家强\n原理探究：新建一个空文件到底会占用多少磁盘空间？\n面试相关：2.5w字+36张图+1周时间：爆肝操作系统面试题！\n面试相关：1.3w字的操作系统高频面试题大分享\n面试相关：学完操作系统内存管理，能回答这8个问题吗\n\n\n数据库&#x2F;SQL\n原理探究：详解一条SQL的执行过程\n原理探究：MySQL的数据存在磁盘上到底长什么样\n原理探究：数据库索引到底是什么\n原理探究：为什么MySQL索引要用B+ tree\n原理探究：为什么用了索引，SQL查询还是慢\n原理探究：数据库索引的原理和使用准则\n原理探究：为什么你写的SQL那么慢\n原理探究：count(1)和count(*)到底哪个效率高\n原理探究：为什么阿里规定超过三张表禁止join\n原理研究：什么是MySQL索引下推？\n原理探究：为什么大公司后台数据库都要搞分库分表？\n原理探究：MySQL不会丢失数据的奥秘就藏在这里\n原理探究：MySQL主从复制那些事儿\n实践应用：常见的SQL错误（不当）写法例析\n实践应用：SQL优化的几个角度\n实践应用：数据库、数据表设计规范例析\n实践应用：梳理开发中常用的SQL优化途径\n实践应用：先更新数据库还是先更新缓存？\n实践应用：百亿级数据分表后如何分页查\n实践应用：什么是SQL注入攻击\n实践应用：用对这些场景下的数据库索引，领导说我有点东西\n实践应用：一个遗留项目的SQL优化实战录\n实践应用：误删数据库后该如何恢复\n实践应用：如何科学根治慢SQL？\n面试相关：面试官最爱的数据库索引连环问\n面试相关：30道保底的MySQL数据库面试题集合\n面试相关：数据库自增ID用完了会怎样\n面试相关：如何保证缓存和数据库的一致性问题？\n面试相关：面试官最爱的MySQL连环问\n面试相关：如何实现丝滑的数据库扩容\n\n\n设计模式\n资源下载 → 23种设计模式学习笔记PDF文档\n单例模式详解\n工厂模式讲解, 引入Spring IOC\n什么是动态代理模式\n经典面试题：Spring用到了哪些设计模式\n\n其他\n每个开发人员都应该了解一点的UML规范\n计算机时间到底是怎么来的\n乱码问题科普：“锟斤拷”的前世今生~\n从一个面试题看程序员的几项基本功\n\n\n应用框架和工具\n\n\n计算机基础聊完了，接下来就是应用和实践的环节了。这部分通常会涉及到一些工具、编程环境、以及应用框架。\n\n企业级开发不同于个人自学，出于可复用性、稳定性、开发成本、开发效率、质量保证等一系列因素的考量，不可能每一个功能、每一个组件都从0开始徒手造轮子，所以这时候各种应用框架和工具的出现就非常有帮助了。\n\n其实框架讲白了就是别人经过多年迭代写好的一套工具、代码库、逻辑、亦或是流程，把原本都需要从0开始手写的基本功能和组件都给封装进去，用户只要符合框架约定的规则进行编码，或者调用框架提供的方法或者工具，就能快速拉起业务功能，创造实际经济价值。\n\n所以框架的出现从不同的角度看也是有多面性的：对于企业级开发效率提升而言肯定是有帮助的，但是对于程序员个人思考编码能力提升却未必是好事，所以多注重基础、深挖原理，提升自身竞争力还是非常有必要的。\n\n\n\nSpring系列框架\n\n\n\n\n原理探究：Spring Boot项目究竟是怎么启动的？源码剖析\n原理探究：SpringBoot中@SpringBootApplication注解探秘\n原理探究：Spring @Autowired注解详解\n原理探究：Spring @Value注解详解\n原理探究：Spring框架是如何解决循环依赖问题的\n原理探究：Spring中竟然有12种定义Bean的方法\n原理探究：Spring的Controller究竟是单例还是多例，如何保证并发安全\n原理探究：为什么Spring的Bean默认是单例的\n原理探究：单点登录(SSO)原理和实现\n原理探究：面试常问的Spring IoC原理解析\n原理探究：了解这些，就可以在Spring启动时为所欲为了\n实践应用：Spring Boot日志框架实践\n实践应用：利用神器BTrace追踪线上Spring Boot应用运行时信息\n实践应用：Spring Boot项目集成全局唯一ID生成器UidGenerator\n实践应用：Spring Boot Admin2.0开箱体验\n实践应用：Spring Boot项目传参校验最佳实践\n实践应用：Spring Boot项目优雅传参方式讨论与实践\n实践应用：基于Spring Security Oauth2的SSO单点登录+JWT权限控制实践\n实践应用：封装一个好用的流水号ID生成器id-spring-boot-starter\n实践应用：封装一个好用的elasticsearch-spring-boot-starter\n实践应用：Spring Boot项目集成jasypt-spring-boot加密组件\n实践应用：基于Spring Security+JWT的权限系统设计\n\n\n\n实践应用：Spring Boot项目集成全局唯一ID生成器Vesta\n实践应用：Spring Boot项目集成Mybatis-Plus\n实践应用：如何自制一个Spring Boot Starter并推到远端公服\n实践应用：Spring Boot项目集成Ehcache缓存\n实践应用：Spring Boot项目集成自然语言处理工具包HanLP\n实践应用：基于Spring Boot实现图片上传&#x2F;加水印一把梭操作\n实践应用：Spring Boot项目集成EVCache缓存实践\n实践应用：Spring Boot项目集成Guava Cache本地缓存实践\n实践应用：Spring Boot项目集成MyBatis Generator进行数据层代码自动生成\n实践应用：初探Kotlin+SpringBoot联合编程\n实践应用：Spring Boot项目集成神器Lombok实践\n实践应用：Spring项目集成Lombok插件的优缺点分析\n实践应用：Spring Boot应用监控实战\n实践应用：Spring Boot项目部署于外置Tomcat容器\n实践应用：Spring Boot热部署加持\n实践应用：Spring Boot高效数据聚合之道\n实践应用：Spring项目日志打印常见问题\n面试相关：Spring面试夺命连环10连问\n面试相关：Spring经典面试题集合\n面试相关：Spring Boot基础面试题集合\n面试相关：Spring Cloud基础面试题集合\n面试相关：说说Spring用到了哪些设计模式？\n内容持续更新中…\n\n前后端分离\n概念科普：到底什么是RESTful ？\n概念科普：RESTful风格的前世今生\n概念科普：为什么需要前后端分离？\n实践应用：前后端分离的接口规范，我们是如何做的？\n实践应用：前后端分离式开发：高效协作10条准则\n实践应用：前后端分离后，接口联调总是甩锅怎么办？\n实践应用：前后端分离项目接口优雅数据交互例析\n实践应用：前后端分离实践中常遇到的跨域问题\n工具推荐：前后端都分离了，该搞个好用的API管理系统了\n\n\n\n分布式&#x2F;微服务\n科普篇：企业里常用的软件架构剖析\n科普篇：单体→分布式→微服务，这些年的软件架构是如何发育的\n科普篇：微服务架构的全局图景分析\n科普篇：分布式架构负载均衡的几种方式\n科普篇：RPC 技术(框架) 大科普\n原理探究：什么是分布式事务\n原理探究：Redis分布式锁保姆级无死角分析\n原理探究：如何设计一个高并发的秒杀架构？\n原理探究：亿级流量网关设计思路\n原理探究：分布式架构的几个常见的坑\n实践应用：RPC框架实践之：Apache Thrift\n实践应用：RPC框架实践之：Google gRPC\n实践应用：Spring Cloud Feign的两种使用姿势\n实践应用：Spring Cloud Eureka Server高可用之：在线扩容\n实践应用：Eureka Server 开启Spring Security Basic认证\n实践应用：Eureka Server启用 https服务指北\n实践应用：微服务调用链追踪中心搭建\n实践应用：利用Zipkin追踪Mysql数据库调用链\n实践应用：一个小团队的微服务架构改造之路\n内容持续更新中…\n\n\n容器&#x2F;集群\n知识总结：常用虚拟化技术（VMware&#x2F;KVM&#x2F;Docker）对比\n知识总结：Docker从入门到干活，看这一篇入门\n知识总结：Docker Swarm的前世今生\n知识总结：编写高效Dockerfile的几条准则\n实践应用：Docker Swarm集群初探\n实践应用：利用ELK搭建Docker容器化应用日志中心\n实践应用：Docker容器可视化监控中心搭建\n实践应用：Docker容器跨主机通信之直接路由方式\n实践应用：利用TICK搭建Docker容器可视化监控中心\n实践应用：利用Kubeadm部署Kubernetes 1.13.1集群实践录\n实践应用：利用K8S技术栈打造个人私有云（连载之：初章）\n实践应用：利用K8S技术栈打造个人私有云（连载之：K8S集群搭建）\n实践应用：利用K8S技术栈打造个人私有云（连载之：K8S环境理解和练手）\n实践应用：利用K8S技术栈打造个人私有云（连载之：基础镜像制作与实验）\n实践应用：利用K8S技术栈打造个人私有云（连载之：K8S资源控制）\n内容持续更新中…\n\n\n\n缓存&#x2F;MQ&#x2F;中间件&#x2F;服务器\n缓存：Redis字符串类型内部编码剖析\n缓存：Redis哈希结构内存模型剖析\n缓存：15张图解：为什么Redis这么快\n缓存：Redis面试全攻略、面试题大集合\n缓存：把Redis当作队列来用，真的合适吗？\n缓存：缓存和数据库一致性问题，看这个就够了\n缓存：面试官爱问的Redis高频面试题大集合\n缓存：1分钟科普：什么是缓存穿透、缓存雪崩、缓存击穿？\n缓存：如何构建一个稳定的高性能Redis集群？\n缓存：轻量级memcached缓存代理twemproxy初探实践\n缓存：先更新数据库还是先更新缓存\nMQ：消息队列RabbitMQ快速入门上手\nMQ：Kafka快速入门上手\nMQ：从面试角度一文学完Kafka\nMQ：为什么Kafka用得这么多？\nMQ：刨根问底之Kafka到底会不会丢消息\nMQ：大厂面试必备之消息队列连环问\nMQ：后端岗面试必备之Dubbo九连问\n服务器：Nginx服务器开箱体验\n服务器：从一份配置清单详解Nginx服务器配置\n服务器：为什么Nginx能轻松撑起几万并发\n搜索引擎：CentOS7上搭建多节点Elasticsearch集群\n搜索引擎：一文上手Elasticsearch常用可视化管理工具\n搜索引擎：从一份定义文件详解ELK中Logstash插件结构\n搜索引擎：Elasticsearch索引的映射配置详解\n其他中间件：ZooKeeper面试常见十二问\n其他中间件：基于代理的数据库分库分表框架Mycat实践\n内容持续更新中…\n\n\n书籍&#x2F;资料推荐\n\n\n毫无疑问的是，对于上文提到的 「编程基础」 部分，有大量经典的书籍值得阅读，每一本都是大师们若干年经验的汇聚，所以学好编程基础，对于我们普通人来说，看书是一个非常直接有效的方式。\n\n很多经典书看一遍可能远远不够，正所谓 「初看懵、再看迷、三看发现有点小意思」 讲的就是这个道理，这事急不得，而且有些东西的确需要一个反反复复的过程，有些甚至是在工作后的实践中才会遇到，所以珍惜每一次回炉重造的过程吧。\n\n\n\n\n书籍资料推荐：\n\nJava开发：我的Java后端开发小书架\nJava开发：一份Java程序员的珍藏书单\nC&#x2F;C++开发：自学C&#x2F;C++书籍整理\n前端开发：前端开发学习资料+书籍盘点\n嵌入式开发：嵌入式开发学习资料+书籍推荐\n视频：我的计算机编程书单\n\n互联网开源教程推荐：\n\n羊哥当时自学数据结构和算法的9大工具\n拜访了这位小哥的GitHub后，我失眠了\nGitHub上这份计算机自学指南火了~\nGitHub 40000星！收下这份宇宙最强「程序员生存指南」\n\n\n开源项目\n开源协议：开源软件的许可协议，先了解一下\nJava开源项目：看完这篇，别人的Java开源项目结构应该能看懂\nJava开源项目：Java领域学习和练手的开源项目分享：第一弹\nJava开源项目：Java领域学习和练手的开源项目分享：第二弹\nJava开源项目：Java领域学习和练手的开源项目分享：第三弹\nC&#x2F;C++开源项目：几款适合初学者学习和练手的C&#x2F;C++开源项目\nC&#x2F;C++开源项目：几款适合进阶学习和练手的C&#x2F;C++开源项目\n人工智能开源项目：AI领域几款标杆开源项目大巡礼\nPython开源项目：几个炫酷的Python开源项目\n读源码的7大心得总结\n\n\n\n实际项目需求和问题例析\n实践案例：实际项目业务接口的幂等性问题\n实践案例：URL短链接服务如何设计\n实践案例：亿行数据超大文件如何高效导入生产数据库\n实践案例：订单系统一般怎么设计\n实践案例：百亿级数据分表后如何分页查\n实践案例：线上服务的YGC问题排查例析\n实践案例：线上服务的FGC问题排查例析\n实践案例：一个小团队的微服务架构改造之路\n实践案例：一个遗留项目的SQL优化实战录\n实践案例：分布式锁使用不当导致的业务损失例析\n实践案例：定时任务的几种简单方案\n实践案例：项目常用的6种URL去重方案汇总\n实践案例：分布式系统架构的几个常见的坑\n项目架构科普：企业里常用的软件架构剖析\n项目架构科普：单体→分布式→微服务，这些年的软件架构是如何发育的\n项目架构科普：微服务架构的全局图景分析\n原理解析：如何设计一个高并发的秒杀架构？\n原理解析：高并发系统设计的常见问题小结\n原理解析：亿级流量网关设计思路\n原理解析：实际网站用户密码是如何存储的\n原理解析：死磕搜索引擎背后的故事\n原理解析：用微信扫码登录的背后发生了什么\n原理解析：扫码付款背后的原理解析\n原理解析：收款码背后的原理剖析\n原理解析：支付掉单背后的几个问题\n原理解析：手机没网却能支付成功的背后原理\n原理解析：高并发场景下，先更新缓存还是先更新数据库？\n原理解析：如何保证缓存和数据库的一致性问题？\n原理解析：什么是分布式事务？\n原理解析：Redis分布式锁实践分析\n原理解析：高并发下如何保证接口的幂等性？\n原理解析：如何实现丝滑的数据库扩容\n原理解析：如何构建一个稳定的高性能Redis集群？\n内容持续更新中…\n\n\n\n\n面试准备和求职\n\n 该板块会持续更新各技术方向的求职面试题集合、面经、以及一些小伙伴的求职心得与经历感悟。\n\n简历相关\n资源下载 → 简历模板下载（word版）\n程序员写简历时必须注意的技术词汇拼写\n国内程序员最容易发音错误的单词集合\n\n工作岗位科普\n科普：学C++的以后能从事哪些岗位\n科普：物联网行业的岗位、技能\n科普：学Linux的以后能做什么\n持续更新中 …\n\n面试题集合\n\n\n\n\nC&#x2F;C++：C语言&#x2F;C++基础面试知识大集合\nC&#x2F;C++：68道C语言&#x2F;C++常见面试题集合\nJava：Java面试题硬核全梳理 ~\nJava：10道精选Java基础面试题集合\nJava：Java基础知识面试题大集合\nJava：Java集合硬核面试50问（附答案）\nJava：面试必问的JVM GC机制精讲\nJava：JVM虚拟机面试题大集合\nJava：JVM垃圾回收硬核18问\nJava：面试官常问的一些JVM面试题\nJava：Java并发和多线程基础面试题大集合\nJava：面试常问的ThreadLocal源码剖析\nJava：面试常问的线程池例析\nJava：面试常问的volatile剖析\nJava：面试必问的ConcurrentHashMap精讲\nJava：说说什么是Java内存模型\nJava：浮点数精度问题面试例析\n计网：面试最爱问的三次握手和四次挥手问题\n计网：计算机网络高频12问\n计网：GET和POST到底有什么区别\n计网：TCP&#x2F;UDP 部分高频面试题大集合\n计网：HTTP常见面试题集合\n计网：浏览器输入网址并回车，后面到底发生了什么\n计网：都说HTTP协议是无状态的，这里的「状态」到底指什么？\n操作系统：操作系统面试题集合\n操作系统：内存管理部分8个常见面试题汇总\n操作系统：操作系统面试题大分享\n操作系统：面试常问的20个Linux命令\n应用框架：Spring夺命连环10连问\n应用框架：Spring 经典面试题大集合\n应用框架：Spring Boot基础面试题大集合\n应用框架：Spring Cloud基础面试题大集合\n\n\n\n\n数据库：MySQL面试硬核25问（附答案）\n数据库：先更新数据库还是先更新缓存？\n数据库：如何保证缓存和数据库的一致性问题？\n数据库：面试官最爱的MySQL连环问\n数据库：如何实现丝滑的数据库扩容\n数据库：数据库索引到底是什么\n数据库：为什么MySQL索引要用B+ tree\n数据库：为什么用了索引，SQL查询还是慢\n数据库：慢SQL背后的原理是什么\n数据库：30道保底的MySQL数据库面试题汇总\n数据库：用心整理的9道MySQL面试题\n中间件：面试官爱问的Redis高频面试题集合\n中间件：Redis面试全攻略、面试题大集合\n中间件：什么是缓存穿透、缓存雪崩、缓存击穿？\n中间件：说说为什么Redis能这么快？\n中间件：如何构建一个稳定的高性能Redis集群？\n中间件：把Redis当作队列来用，真的合适吗？\n中间件：Redis分布式锁的详细分析\n中间件：ZooKeeper面试十二连问\n中间件：消息队列面试连环问总结\n中间件：Kafka面试要点梳理\n中间件：说说你对RPC技术是怎么理解的？\n中间件：后端岗面试必备之Dubbo九连问\n中间件：为什么Nginx能轻松撑起几万并发？\n系统架构：企业里常用的软件架构科普\n系统架构：单体→分布式→微服务，这些年的软件架构是怎么发展的\n系统架构：如何设计一个高并发的秒杀架构？\n系统架构：分布式架构的几个常见的坑\n系统架构：说说分布式架构负载均衡的几种方式\n系统架构：说说什么是分布式事务？\n系统架构：亿级流量网关的设计思路\n设计模式：说说Spring用到了哪些设计模式？\n\n\n\n求职经历分享\n小伙伴经历分享：Linux后台开发该如何准备\n二本无实习上岸滴滴京东58复盘(一)\n二本无实习上岸滴滴京东58复盘(二)\n小伙伴面经分享(一)：深信服(含答案)\n小伙伴面经分享(二)：京东(含答案)\n一位程序媛的秋招软件开发岗面试经历\n写简历→面试→谈薪：一绿向北\n小红书后台开发岗面试经历复盘~\n国企和银行：面试都问些啥？如何准备？\n招银网络（银行科技岗）面试都问了些啥？\n准备提前批？还是去实习？还是准备秋招？\n7面Google，面经分享\n化学专业大二转码的抉择之路\n拿到腾讯实习Offer的经历分享\n怎么准备国企和银行？\n去银行当程序员是一种什么体验\n\n城市&#x2F;公司选择\n一二线城市知名IT互联网公司总名单\n常见互联网公司职级和薪资一览\n常见互联网公司时薪排行榜\n\n\n\n成都有哪些知名的IT&#x2F;互联网公司？\n武汉有哪些知名的IT&#x2F;互联网公司？\n南京有哪些知名的IT&#x2F;互联网公司？\n合肥有哪些知名的IT&#x2F;互联网公司？\n深圳有哪些知名的IT&#x2F;互联网公司？\n成都有哪些知名的IT&#x2F;互联网公司？\n西安有哪些知名的IT&#x2F;互联网公司？\n长沙有哪些知名的IT&#x2F;互联网公司？\n武汉有哪些知名的IT&#x2F;互联网公司？\n天津有哪些知名的IT&#x2F;互联网公司？\n郑州有哪些知名的IT&#x2F;互联网公司？\n杭州有哪些知名的IT&#x2F;互联网公司？\n广州有哪些知名的IT&#x2F;互联网公司？\n青岛有哪些知名的IT&#x2F;互联网公司？\n上海有哪些知名的IT&#x2F;互联网公司？\n大连有哪些知名的IT&#x2F;互联网公司？\n苏州有哪些知名的IT&#x2F;互联网公司？\n\n其他求职相关问题\n为什么有些大公司技术却弱爆了？\n嵌入式行业到底有没有搞头？\n找工作时，公司所说的「给期权」到底是什么东西？\n入职一家公司，应该选择新业务还是老业务？\n采访了一位技术总监：聊了聊跳槽的心态问题\n程序员从技术→管理，要走哪些路？\n\n\n资源汇总和下载\n\n 该版块会持续更新那些优秀的编程资源，**包括但不限于：**各种硬核的PDF笔记、软件包、技术手册、自制文档、题解解析、简历模板、面试题文档 等等。\n\n\n编程学习资源大整理\n下载链接：https://pan.baidu.com/s/1jEjcF96iVAXEXaadE1V6RQ\n提取码：f23d\n\nPDF干货笔记下载\n下载 → LeetCode算法刷题Golang版答案PDF文档\n下载 → LeetCode算法刷题C++版答案PDF文档\n下载 → LeetCode算法刷题Java版答案PDF文档\n下载 → 谷歌学长的数据结构+算法题代码笔记手册\n下载 → 再肝两夜，写了个「服务器项目部署」实战PDF手册\n下载 → 熬10天夜，肝出了这个PDF版「软件安装手册」\n下载 → 熬了7天夜，羊哥肝了个Linux速查备忘手册！\n下载 → Java后端开发学习路线+知识点梳理总结\n下载 → 前端开发学习路线+知识点梳理总结\n下载 → 大数据开发学习路线+知识点梳理总结\n下载 → 嵌入式开发学习路线+知识点梳理总结\n下载 → C&#x2F;C++后台开发学习路线+知识点梳理总结\n下载 → 找工作简历模板集(word格式) \n下载 → 程序员写简历时的技术词汇拼写规范PDF手册\n下载 → Java基础核心知识大总结PDF文档\n下载 → C&#x2F;C++常见面试题（含答案）PDF文档\n下载 → 设计模式学习笔记PDF文档\n下载 → Java多线程+并发编程知识点详细总结PDF\n下载 → 阿里Java开发手册PDF全套\n\n其他资源下载\n下载 → 豆瓣9.1分的Pro Git学习手册YYDS！\n下载 → 《Linux命令行大全》.pdf手册\n\n\n\n 我们所应该热爱的，就是自己的生活！\n\n\n\n在线画图工具ProcessOn\n在线画图工具Draw.io\n在线思维导图工具MindLine\n在线字数统计工具\nmdnice markdown排版工具\nmd2all markdown排版工具\n在线代码截图工具\n\n摸鱼时间\n0x00000001\n\n\n持续更新中…页面内容会持续保持更新，欢迎收藏品鉴！\n","categories":["资源超集合"],"tags":["资源超集合"]}]